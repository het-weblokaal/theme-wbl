/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/dynamic-load.js":
/*!********************************!*\
  !*** ./src/js/dynamic-load.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Dynamic Load Stylesheet or Script\n *\n * To dynamically load a stylesheet or script...\n *\n * Note: I think the scripts and styles should be loaded on load.\n */\nvar dynamicLoad = function () {\n  var props = {}; // Store properties\n\n  var methods = {}; // Store methods (functions)\n\n  /**\n  * Set path to scripts and stylesheets\n  *\n  * @param path  string relative url path\n  */\n\n  methods.setPath = function (path) {\n    props.path = path; // Trailingslash..\n    // if (url.substr(-1) != '/') url += '/';\n  };\n  /**\n  * Load the specified Script\n  *\n  * @param url  \t  target Script to load\n  * @param loaded  function to call on script loaded\n  */\n\n\n  methods.script = function (url, loaded) {\n    var path = props.path ? props.path : '';\n    var tag = document.createElement(\"script\");\n\n    if (typeof loaded == \"function\") {\n      tag.onload = loaded;\n    }\n\n    tag.src = path + url;\n    document.head.appendChild(tag);\n  };\n  /**\n   * Load the specified Stylesheet\n   *\n   * @param url  \t  target Stylesheet to load\n   * @param loaded  function to call on script loaded\n   */\n\n\n  methods.stylesheet = function (url, loaded) {\n    var path = props.path ? props.path : '';\n    var tag = document.createElement(\"link\");\n\n    if (typeof loaded == \"function\") {\n      tag.onload = loaded;\n    }\n\n    tag.rel = \"stylesheet\";\n    tag.media = \"all\";\n    tag.href = path + url;\n    document.head.appendChild(tag);\n  };\n  /**\n   * Load the specified Stylesheet\n   *\n   * @param url  \t  target Stylesheet to load\n   * @param loaded  function to call on script loaded\n   */\n\n\n  methods.unloadStylesheet = function (id) {\n    var stylesheet = document.getElementById(id);\n    console.log(stylesheet);\n\n    if (stylesheet) {\n      stylesheet.disabled = true;\n    }\n  }; // Return\n\n\n  return {\n    setPath: methods.setPath,\n    script: methods.script,\n    stylesheet: methods.stylesheet,\n    unloadStylesheet: methods.unloadStylesheet\n  };\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dynamicLoad);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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anMvZHluYW1pYy1sb2FkLmpzP2M4N2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEeW5hbWljIExvYWQgU3R5bGVzaGVldCBvciBTY3JpcHRcbiAqXG4gKiBUbyBkeW5hbWljYWxseSBsb2FkIGEgc3R5bGVzaGVldCBvciBzY3JpcHQuLi5cbiAqXG4gKiBOb3RlOiBJIHRoaW5rIHRoZSBzY3JpcHRzIGFuZCBzdHlsZXMgc2hvdWxkIGJlIGxvYWRlZCBvbiBsb2FkLlxuICovXG5cbnZhciBkeW5hbWljTG9hZCA9IChmdW5jdGlvbigpIHtcblxuICAgIHZhciBwcm9wcyAgID0ge307IC8vIFN0b3JlIHByb3BlcnRpZXNcbiAgICB2YXIgbWV0aG9kcyA9IHt9OyAvLyBTdG9yZSBtZXRob2RzIChmdW5jdGlvbnMpXG5cbiAgICAvKipcblx0ICogU2V0IHBhdGggdG8gc2NyaXB0cyBhbmQgc3R5bGVzaGVldHNcblx0ICpcblx0ICogQHBhcmFtIHBhdGggIHN0cmluZyByZWxhdGl2ZSB1cmwgcGF0aFxuXHQgKi9cbiAgICBtZXRob2RzLnNldFBhdGggPSBmdW5jdGlvbiAocGF0aCkge1xuICAgIFx0cHJvcHMucGF0aCA9IHBhdGg7XG5cbiAgICBcdC8vIFRyYWlsaW5nc2xhc2guLlxuICAgIFx0Ly8gaWYgKHVybC5zdWJzdHIoLTEpICE9ICcvJykgdXJsICs9ICcvJztcbiAgICB9XG5cblxuICAgIC8qKlxuXHQgKiBMb2FkIHRoZSBzcGVjaWZpZWQgU2NyaXB0XG5cdCAqXG5cdCAqIEBwYXJhbSB1cmwgIFx0ICB0YXJnZXQgU2NyaXB0IHRvIGxvYWRcblx0ICogQHBhcmFtIGxvYWRlZCAgZnVuY3Rpb24gdG8gY2FsbCBvbiBzY3JpcHQgbG9hZGVkXG5cdCAqL1xuICAgIG1ldGhvZHMuc2NyaXB0ID0gZnVuY3Rpb24gKHVybCwgbG9hZGVkKSB7XG5cblx0XHR2YXIgcGF0aCA9IChwcm9wcy5wYXRoKSA/IHByb3BzLnBhdGggOiAnJztcblx0XHR2YXIgdGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcblxuXHRcdGlmICh0eXBlb2YgbG9hZGVkID09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0dGFnLm9ubG9hZCA9IGxvYWRlZDtcblx0XHR9XG5cdFx0dGFnLnNyYyA9IHBhdGggKyB1cmw7XG5cdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCh0YWcpO1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBMb2FkIHRoZSBzcGVjaWZpZWQgU3R5bGVzaGVldFxuXHQgKlxuXHQgKiBAcGFyYW0gdXJsICBcdCAgdGFyZ2V0IFN0eWxlc2hlZXQgdG8gbG9hZFxuXHQgKiBAcGFyYW0gbG9hZGVkICBmdW5jdGlvbiB0byBjYWxsIG9uIHNjcmlwdCBsb2FkZWRcblx0ICovXG5cdG1ldGhvZHMuc3R5bGVzaGVldCA9IGZ1bmN0aW9uICh1cmwsIGxvYWRlZCkge1xuXG5cdFx0dmFyIHBhdGggPSAocHJvcHMucGF0aCkgPyBwcm9wcy5wYXRoIDogJyc7XG5cdFx0dmFyIHRhZyAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRcdGlmICh0eXBlb2YgbG9hZGVkID09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0dGFnLm9ubG9hZCA9IGxvYWRlZDtcblx0XHR9XG5cdFx0dGFnLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXHRcdHRhZy5tZWRpYSA9IFwiYWxsXCI7XG5cdFx0dGFnLmhyZWYgPSBwYXRoICsgdXJsO1xuXHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQodGFnKTtcblx0fTtcblxuXHQvKipcblx0ICogTG9hZCB0aGUgc3BlY2lmaWVkIFN0eWxlc2hlZXRcblx0ICpcblx0ICogQHBhcmFtIHVybCAgXHQgIHRhcmdldCBTdHlsZXNoZWV0IHRvIGxvYWRcblx0ICogQHBhcmFtIGxvYWRlZCAgZnVuY3Rpb24gdG8gY2FsbCBvbiBzY3JpcHQgbG9hZGVkXG5cdCAqL1xuXHRtZXRob2RzLnVubG9hZFN0eWxlc2hlZXQgPSBmdW5jdGlvbiAoaWQpIHtcblxuXHRcdHZhciBzdHlsZXNoZWV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuXG5cdFx0Y29uc29sZS5sb2coc3R5bGVzaGVldCk7XG5cblx0XHRpZiAoc3R5bGVzaGVldCkge1xuXHRcdFx0c3R5bGVzaGVldC5kaXNhYmxlZCA9IHRydWU7XG5cdFx0fVxuXHR9O1xuXG5cdC8vIFJldHVyblxuICAgIHJldHVybiB7XG4gICAgICAgIHNldFBhdGg6IG1ldGhvZHMuc2V0UGF0aCxcbiAgICAgICAgc2NyaXB0OiBtZXRob2RzLnNjcmlwdCxcbiAgICAgICAgc3R5bGVzaGVldDogbWV0aG9kcy5zdHlsZXNoZWV0LFxuICAgICAgICB1bmxvYWRTdHlsZXNoZWV0OiBtZXRob2RzLnVubG9hZFN0eWxlc2hlZXRcbiAgICB9O1xufSkoKTtcblxuZXhwb3J0IGRlZmF1bHQgZHluYW1pY0xvYWQ7XG4iXSwibmFtZXMiOlsiZHluYW1pY0xvYWQiLCJwcm9wcyIsIm1ldGhvZHMiLCJzZXRQYXRoIiwicGF0aCIsInNjcmlwdCIsInVybCIsImxvYWRlZCIsInRhZyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsIm9ubG9hZCIsInNyYyIsImhlYWQiLCJhcHBlbmRDaGlsZCIsInN0eWxlc2hlZXQiLCJyZWwiLCJtZWRpYSIsImhyZWYiLCJ1bmxvYWRTdHlsZXNoZWV0IiwiaWQiLCJnZXRFbGVtZW50QnlJZCIsImNvbnNvbGUiLCJsb2ciLCJkaXNhYmxlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/dynamic-load.js\n");

/***/ }),

/***/ "./src/js/site-nav-toggle.js":
/*!***********************************!*\
  !*** ./src/js/site-nav-toggle.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Site Navigation Toggle\n *\n * A flexible and accessible toggle for site navigation\n */\nvar siteNavToggle = function () {\n  var props = {}; // Store properties\n\n  var methods = {}; // Store methods (functions)\n\n  var elems = {}; // Store elements\n\n  var events = {}; // Store events\n\n  var helpers = {}; // Store private helper methods\n\n  /* ENGINE\n  -------------------------------------*/\n  // Initialize\n\n  methods.init = function (customOptions) {\n    // Setup toggle and target\n    methods.setup(customOptions); // We only need to control if we have a toggle and a target\n\n    if (elems.toggle && elems.target) {\n      // Make sure toggle and target are in the right state\n      methods.reset(); // Manage control of toggle and target\n\n      methods.control();\n    }\n  }; // Setup\n\n\n  methods.setup = function (customOptions) {\n    // Set default options\n    props.options = {\n      rootSelector: 'body',\n      toggleSelector: '.site-nav-toggle',\n      targetSelector: '.site-nav',\n      activeRootClass: 'has-expanded-site-nav'\n    }; // Merge options\n\n    props.options = helpers.extend(true, props.options, customOptions); // Get root\n\n    elems.root = document.querySelector(props.options.rootSelector); // Get toggle\n\n    elems.toggle = document.querySelector(props.options.toggleSelector); // Get navigation based on toggle-target\n\n    elems.target = document.querySelector(props.options.targetSelector);\n\n    if (elems.target) {\n      // Focusable elements inside the target\n      elems.targetFocusable = elems.target.querySelectorAll(['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])']);\n    }\n  }; // Control\n\n\n  methods.control = function () {\n    // Manage opening and closing of target\n    events.onClickToggle(methods.toggle); // // Extra closing methods\n\n    events.onPressEscape(methods.close);\n    events.onClickOutsideTarget(methods.close);\n  };\n  /**\n   * Make sure toggle and target are in the right state\n   */\n\n\n  methods.reset = function () {\n    elems.toggle.setAttribute('aria-expanded', 'false');\n    elems.target.setAttribute('aria-expanded', 'false');\n    elems.root.classList.remove(props.options.activeRootClass); // Force toggle to be focusable\n    // elems.toggle.tabIndex = 0;\n    // Prevent target from getting focus\n\n    methods.preventFocusInTarget();\n  };\n  /* FUNCTIONS\n  -------------------------------------*/\n\n  /**\n   * Toggle menu classes and ARIA.\n   */\n\n\n  methods.toggle = function (toggle) {\n    if (methods.isOpen()) {\n      methods.close();\n    } else {\n      methods.open(toggle);\n    }\n  };\n  /**\n   * Open target\n   */\n\n\n  methods.open = function (toggle) {\n    // Don't open if target is not closed\n    if (!methods.isClose()) {\n      return;\n    }\n\n    elems.toggle.setAttribute('aria-expanded', 'true');\n    elems.target.setAttribute('aria-expanded', 'true');\n    elems.root.classList.add(props.options.activeRootClass); // Get lastFocus element\n\n    elems.lastFocus = toggle; // Trap focus in target\n\n    methods.allowFocusInTarget();\n    methods.trapFocusInTarget();\n  };\n  /**\n   * Close target\n   */\n\n\n  methods.close = function () {\n    // Don't close if target is not open\n    if (!methods.isOpen()) {\n      return;\n    }\n\n    elems.toggle.setAttribute('aria-expanded', 'false');\n    elems.target.setAttribute('aria-expanded', 'false');\n    elems.root.classList.remove(props.options.activeRootClass); // Return focus to lastFocussed element\n\n    if (elems.lastFocus) {\n      elems.lastFocus.focus();\n    } // Prevent target from getting focus\n\n\n    methods.preventFocusInTarget();\n  };\n  /**\n   * Check if target is open (expanded)\n   */\n\n\n  methods.isOpen = function () {\n    return elems.target.getAttribute('aria-expanded') == 'true';\n  };\n  /**\n   * Check if target is closed (not expanded)\n   */\n\n\n  methods.isClose = function () {\n    return !methods.isOpen();\n  }; // Trap focus in target\n\n\n  methods.trapFocusInTarget = function () {\n    // Get first and last focusable element to define the edges of the tab-scope\n    var firstFocusableElem = elems.targetFocusable[0];\n    var lastFocusableElem = elems.targetFocusable[elems.targetFocusable.length - 1]; // On Tab of the toggle\n\n    elems.toggle.addEventListener('keydown', function (e) {\n      if (methods.isOpen()) {\n        // Redirect Shift+Tab to lastFocusableElem\n        if (9 === e.keyCode && e.shiftKey) {\n          e.preventDefault();\n          lastFocusableElem.focus(); // Set focus on first element.\n        } // Redirect Tab to firstFocusableElem\n\n\n        if (9 === e.keyCode && !e.shiftKey) {\n          e.preventDefault();\n          firstFocusableElem.focus();\n        }\n      }\n    }); // On Tab of the first target focusable elem\n\n    firstFocusableElem.addEventListener('keydown', function (e) {\n      if (methods.isOpen()) {\n        // Redirect first Shift+Tab to toggle\n        if (9 === e.keyCode && e.shiftKey) {\n          e.preventDefault();\n          elems.toggle.focus(); // Set focus on first element.\n        }\n      }\n    }); // On Tab of the last target focusable elem\n\n    lastFocusableElem.addEventListener('keydown', function (e) {\n      if (methods.isOpen()) {\n        // Redirect last Tab to toggle\n        if (9 === e.keyCode && !e.shiftKey) {\n          e.preventDefault();\n          elems.toggle.focus();\n        }\n      }\n    });\n  }; // Allow focus in target\n\n\n  methods.allowFocusInTarget = function () {\n    // Remove negative tabindexes set by methods.preventFocusInTarget()\n    for (var i = 0; i < elems.targetFocusable.length; i++) {\n      elems.targetFocusable[i].removeAttribute('tabindex');\n    }\n  }; // Prevent focus in target\n\n\n  methods.preventFocusInTarget = function () {\n    // Set tabindex to -1 to prevent tabbing\n    for (var i = 0; i < elems.targetFocusable.length; i++) {\n      elems.targetFocusable[i].tabIndex = -1;\n    }\n  };\n  /* EVENTS\n  -------------------------------------*/\n  // On click target toggle\n\n\n  events.onClickToggle = function (callback) {\n    // Exit if callback is not a function\n    if (typeof callback !== \"function\") return; // Click on toggle\n\n    document.addEventListener('click', function (event) {\n      // Check if toggle\n      if (elems.toggle.contains(event.target)) {\n        event.preventDefault();\n        callback(event.target);\n      }\n    }, false);\n  }; // On press Escape Key\n\n\n  events.onPressEscape = function (callback) {\n    // Check if callback is function\n    if (typeof callback !== \"function\") return;\n    document.addEventListener('keyup', function (event) {\n      // 27 = Escape key\n      if (27 === event.keyCode) {\n        callback();\n      }\n    }, false);\n  }; // Click outside target\n\n\n  events.onClickOutsideTarget = function (callback) {\n    // Check if callback is function\n    if (typeof callback !== \"function\") return; // Listen to click outside target\n\n    document.addEventListener('click', function (event) {\n      // Only check if navigation is opened\n      if (methods.isOpen()) {\n        // Only proceed if click is outside target. Toggle is not outside target\n        if (!elems.target.contains(event.target) && !elems.toggle.contains(event.target)) {\n          callback();\n        }\n      }\n    }, false);\n  };\n  /* HELPERS\n  -------------------------------------*/\n  // Pass in the objects to merge as arguments.\n  // For a deep extend, set the first argument to `true`.\n\n\n  helpers.extend = function () {\n    // Variables\n    var extended = {};\n    var deep = false;\n    var i = 0;\n    var length = arguments.length; // Check if a deep merge\n\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\n      deep = arguments[0];\n      i++;\n    } // Merge the object into the extended object\n\n\n    var merge = function merge(obj) {\n      for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n          // If deep merge and property is an object, merge properties\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n            extended[prop] = helpers.extend(true, extended[prop], obj[prop]);\n          } else {\n            extended[prop] = obj[prop];\n          }\n        }\n      }\n    }; // Loop through each object and conduct a merge\n\n\n    for (; i < length; i++) {\n      var obj = arguments[i];\n      merge(obj);\n    }\n\n    return extended;\n  }; // Return\n\n\n  return {\n    init: methods.init,\n    props: props,\n    elems: elems\n  };\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (siteNavToggle);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/site-nav-toggle.js\n");

/***/ }),

/***/ "./src/js/theme.js":
/*!*************************!*\
  !*** ./src/js/theme.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _site_nav_toggle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./site-nav-toggle.js */ \"./src/js/site-nav-toggle.js\");\n/* harmony import */ var _dynamic_load_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dynamic-load.js */ \"./src/js/dynamic-load.js\");\n/**\n * Primary front-end script.\n */\n\n\n_site_nav_toggle_js__WEBPACK_IMPORTED_MODULE_0__.default.init({\n  toggleSelector: '.site-nav-toggle',\n  targetSelector: '.site-nav'\n}); // Check whether this is IE and add IE11 stylesheet\n\nif (window.document.documentMode) {\n  _dynamic_load_js__WEBPACK_IMPORTED_MODULE_1__.default.stylesheet(\"/wp-content/themes/theme-wbl/public/css/ie11-style.css?ver=\" + theme.version);\n  _dynamic_load_js__WEBPACK_IMPORTED_MODULE_1__.default.unloadStylesheet(\"theme-wbl-css\");\n}\n/**\n * Grid toggle\n */\n\n\nvar gridToggle = document.querySelector('#grid-toggle');\nvar gridToggleTarget = document.querySelector('body');\n\nif (gridToggle) {\n  if (localStorage.getItem('hasGrid')) {\n    gridToggleTarget.classList.add('has-grid');\n    gridToggle.checked = true;\n  } else {\n    gridToggle.textContent = false;\n  }\n\n  gridToggle.addEventListener('click', function (e) {\n    // e.preventDefault();\n    if (localStorage.getItem('hasGrid')) {\n      gridToggleTarget.classList.remove('has-grid');\n      gridToggle.checked = false;\n      localStorage.removeItem('hasGrid');\n    } else {\n      gridToggleTarget.classList.add('has-grid');\n      gridToggle.checked = true;\n      localStorage.setItem('hasGrid', true);\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvdGhlbWUuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBQSw2REFBQSxDQUFtQjtBQUNsQkcsRUFBQUEsY0FBYyxFQUFHLGtCQURDO0FBRWZDLEVBQUFBLGNBQWMsRUFBRztBQUZGLENBQW5CLEdBS0E7O0FBQ0EsSUFBSUMsTUFBTSxDQUFDQyxRQUFQLENBQWdCQyxZQUFwQixFQUFrQztBQUNqQ04sRUFBQUEsZ0VBQUEsQ0FBdUIsZ0VBQThEUSxLQUFLLENBQUNDLE9BQTNGO0FBQ0FULEVBQUFBLHNFQUFBLENBQTZCLGVBQTdCO0FBQ0E7QUFJRDtBQUNBO0FBQ0E7OztBQUNBLElBQUlXLFVBQVUsR0FBR04sUUFBUSxDQUFDTyxhQUFULENBQXVCLGNBQXZCLENBQWpCO0FBQ0EsSUFBSUMsZ0JBQWdCLEdBQUdSLFFBQVEsQ0FBQ08sYUFBVCxDQUF1QixNQUF2QixDQUF2Qjs7QUFFQSxJQUFJRCxVQUFKLEVBQWdCO0FBRVosTUFBSUcsWUFBWSxDQUFDQyxPQUFiLENBQXFCLFNBQXJCLENBQUosRUFBcUM7QUFDcENGLElBQUFBLGdCQUFnQixDQUFDRyxTQUFqQixDQUEyQkMsR0FBM0IsQ0FBK0IsVUFBL0I7QUFDQU4sSUFBQUEsVUFBVSxDQUFDTyxPQUFYLEdBQXFCLElBQXJCO0FBQ0EsR0FIRCxNQUlLO0FBQ0pQLElBQUFBLFVBQVUsQ0FBQ1EsV0FBWCxHQUF5QixLQUF6QjtBQUNBOztBQUVEUixFQUFBQSxVQUFVLENBQUNTLGdCQUFYLENBQTRCLE9BQTVCLEVBQXFDLFVBQVNDLENBQVQsRUFBWTtBQUM3QztBQUNBLFFBQUlQLFlBQVksQ0FBQ0MsT0FBYixDQUFxQixTQUFyQixDQUFKLEVBQXFDO0FBQ2pDRixNQUFBQSxnQkFBZ0IsQ0FBQ0csU0FBakIsQ0FBMkJNLE1BQTNCLENBQWtDLFVBQWxDO0FBQ0FYLE1BQUFBLFVBQVUsQ0FBQ08sT0FBWCxHQUFxQixLQUFyQjtBQUNBSixNQUFBQSxZQUFZLENBQUNTLFVBQWIsQ0FBd0IsU0FBeEI7QUFDSCxLQUpELE1BSU87QUFDSFYsTUFBQUEsZ0JBQWdCLENBQUNHLFNBQWpCLENBQTJCQyxHQUEzQixDQUErQixVQUEvQjtBQUNBTixNQUFBQSxVQUFVLENBQUNPLE9BQVgsR0FBcUIsSUFBckI7QUFDQUosTUFBQUEsWUFBWSxDQUFDVSxPQUFiLENBQXFCLFNBQXJCLEVBQWdDLElBQWhDO0FBQ0g7QUFDSixHQVhEO0FBWUgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVtZS13YmwvLi9zcmMvanMvdGhlbWUuanM/OTNkMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFByaW1hcnkgZnJvbnQtZW5kIHNjcmlwdC5cbiAqL1xuXG5pbXBvcnQgc2l0ZU5hdlRvZ2dsZSBmcm9tICcuL3NpdGUtbmF2LXRvZ2dsZS5qcyc7XG5pbXBvcnQgZHluYW1pY0xvYWQgZnJvbSAnLi9keW5hbWljLWxvYWQuanMnO1xuXG5zaXRlTmF2VG9nZ2xlLmluaXQoe1xuXHR0b2dnbGVTZWxlY3RvciA6ICcuc2l0ZS1uYXYtdG9nZ2xlJyxcbiAgICB0YXJnZXRTZWxlY3RvciA6ICcuc2l0ZS1uYXYnXG59KTtcblxuLy8gQ2hlY2sgd2hldGhlciB0aGlzIGlzIElFIGFuZCBhZGQgSUUxMSBzdHlsZXNoZWV0XG5pZiAod2luZG93LmRvY3VtZW50LmRvY3VtZW50TW9kZSkge1xuXHRkeW5hbWljTG9hZC5zdHlsZXNoZWV0KFwiL3dwLWNvbnRlbnQvdGhlbWVzL3RoZW1lLXdibC9wdWJsaWMvY3NzL2llMTEtc3R5bGUuY3NzP3Zlcj1cIit0aGVtZS52ZXJzaW9uKTtcblx0ZHluYW1pY0xvYWQudW5sb2FkU3R5bGVzaGVldChcInRoZW1lLXdibC1jc3NcIik7XG59XG5cblxuXG4vKipcbiAqIEdyaWQgdG9nZ2xlXG4gKi9cbmxldCBncmlkVG9nZ2xlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2dyaWQtdG9nZ2xlJyk7XG5sZXQgZ3JpZFRvZ2dsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcblxuaWYgKGdyaWRUb2dnbGUpIHtcblxuICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaGFzR3JpZCcpKSB7XG4gICAgXHRncmlkVG9nZ2xlVGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2hhcy1ncmlkJyk7XG4gICAgXHRncmlkVG9nZ2xlLmNoZWNrZWQgPSB0cnVlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICBcdGdyaWRUb2dnbGUudGV4dENvbnRlbnQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBncmlkVG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAvLyBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaGFzR3JpZCcpKSB7XG4gICAgICAgICAgICBncmlkVG9nZ2xlVGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ2hhcy1ncmlkJyk7XG4gICAgICAgICAgICBncmlkVG9nZ2xlLmNoZWNrZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdoYXNHcmlkJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBncmlkVG9nZ2xlVGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2hhcy1ncmlkJyk7XG4gICAgICAgICAgICBncmlkVG9nZ2xlLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2hhc0dyaWQnLCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH0pOyBcbn0iXSwibmFtZXMiOlsic2l0ZU5hdlRvZ2dsZSIsImR5bmFtaWNMb2FkIiwiaW5pdCIsInRvZ2dsZVNlbGVjdG9yIiwidGFyZ2V0U2VsZWN0b3IiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImRvY3VtZW50TW9kZSIsInN0eWxlc2hlZXQiLCJ0aGVtZSIsInZlcnNpb24iLCJ1bmxvYWRTdHlsZXNoZWV0IiwiZ3JpZFRvZ2dsZSIsInF1ZXJ5U2VsZWN0b3IiLCJncmlkVG9nZ2xlVGFyZ2V0IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImNsYXNzTGlzdCIsImFkZCIsImNoZWNrZWQiLCJ0ZXh0Q29udGVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicmVtb3ZlIiwicmVtb3ZlSXRlbSIsInNldEl0ZW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/theme.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/theme.js");
/******/ 	
/******/ })()
;