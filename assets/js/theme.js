/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/dynamic-load.js":
/*!********************************!*\
  !*** ./src/js/dynamic-load.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * Dynamic Load Stylesheet or Script\n *\n * To dynamically load a stylesheet or script...\n *\n * Note: I think the scripts and styles should be loaded on load.\n */\nvar dynamicLoad = function () {\n  var props = {}; // Store properties\n\n  var methods = {}; // Store methods (functions)\n\n  /**\n  * Set path to scripts and stylesheets\n  *\n  * @param path  string relative url path\n  */\n\n  methods.setPath = function (path) {\n    props.path = path; // Trailingslash..\n    // if (url.substr(-1) != '/') url += '/';\n  };\n  /**\n  * Load the specified Script\n  *\n  * @param url  \t  target Script to load\n  * @param loaded  function to call on script loaded\n  */\n\n\n  methods.script = function (url, loaded) {\n    var path = props.path ? props.path : '';\n    var tag = document.createElement(\"script\");\n\n    if (typeof loaded == \"function\") {\n      tag.onload = loaded;\n    }\n\n    tag.src = path + url;\n    document.head.appendChild(tag);\n  };\n  /**\n   * Load the specified Stylesheet\n   *\n   * @param url  \t  target Stylesheet to load\n   * @param loaded  function to call on script loaded\n   */\n\n\n  methods.stylesheet = function (url, loaded) {\n    var path = props.path ? props.path : '';\n    var tag = document.createElement(\"link\");\n\n    if (typeof loaded == \"function\") {\n      tag.onload = loaded;\n    }\n\n    tag.rel = \"stylesheet\";\n    tag.media = \"all\";\n    tag.href = path + url;\n    document.head.appendChild(tag);\n  };\n  /**\n   * Load the specified Stylesheet\n   *\n   * @param url  \t  target Stylesheet to load\n   * @param loaded  function to call on script loaded\n   */\n\n\n  methods.unloadStylesheet = function (id) {\n    var stylesheet = document.getElementById(id);\n    console.log(stylesheet);\n\n    if (stylesheet) {\n      stylesheet.disabled = true;\n    }\n  }; // Return\n\n\n  return {\n    setPath: methods.setPath,\n    script: methods.script,\n    stylesheet: methods.stylesheet,\n    unloadStylesheet: methods.unloadStylesheet\n  };\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (dynamicLoad);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvZHluYW1pYy1sb2FkLmpzP2M4N2QiXSwibmFtZXMiOlsiZHluYW1pY0xvYWQiLCJwcm9wcyIsIm1ldGhvZHMiLCJzZXRQYXRoIiwicGF0aCIsInNjcmlwdCIsInVybCIsImxvYWRlZCIsInRhZyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsIm9ubG9hZCIsInNyYyIsImhlYWQiLCJhcHBlbmRDaGlsZCIsInN0eWxlc2hlZXQiLCJyZWwiLCJtZWRpYSIsImhyZWYiLCJ1bmxvYWRTdHlsZXNoZWV0IiwiaWQiLCJnZXRFbGVtZW50QnlJZCIsImNvbnNvbGUiLCJsb2ciLCJkaXNhYmxlZCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTs7Ozs7OztBQVFBLElBQUlBLFdBQVcsR0FBSSxZQUFXO0FBRTFCLE1BQUlDLEtBQUssR0FBSyxFQUFkLENBRjBCLENBRVI7O0FBQ2xCLE1BQUlDLE9BQU8sR0FBRyxFQUFkLENBSDBCLENBR1I7O0FBRWxCOzs7Ozs7QUFLQUEsU0FBTyxDQUFDQyxPQUFSLEdBQWtCLFVBQVVDLElBQVYsRUFBZ0I7QUFDakNILFNBQUssQ0FBQ0csSUFBTixHQUFhQSxJQUFiLENBRGlDLENBR2pDO0FBQ0E7QUFDQSxHQUxEO0FBUUE7Ozs7Ozs7O0FBTUFGLFNBQU8sQ0FBQ0csTUFBUixHQUFpQixVQUFVQyxHQUFWLEVBQWVDLE1BQWYsRUFBdUI7QUFFMUMsUUFBSUgsSUFBSSxHQUFJSCxLQUFLLENBQUNHLElBQVAsR0FBZUgsS0FBSyxDQUFDRyxJQUFyQixHQUE0QixFQUF2QztBQUNBLFFBQUlJLEdBQUcsR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLFFBQXZCLENBQVY7O0FBRUEsUUFBSSxPQUFPSCxNQUFQLElBQWlCLFVBQXJCLEVBQWlDO0FBQ2hDQyxTQUFHLENBQUNHLE1BQUosR0FBYUosTUFBYjtBQUNBOztBQUNEQyxPQUFHLENBQUNJLEdBQUosR0FBVVIsSUFBSSxHQUFHRSxHQUFqQjtBQUNBRyxZQUFRLENBQUNJLElBQVQsQ0FBY0MsV0FBZCxDQUEwQk4sR0FBMUI7QUFDQSxHQVZFO0FBWUg7Ozs7Ozs7O0FBTUFOLFNBQU8sQ0FBQ2EsVUFBUixHQUFxQixVQUFVVCxHQUFWLEVBQWVDLE1BQWYsRUFBdUI7QUFFM0MsUUFBSUgsSUFBSSxHQUFJSCxLQUFLLENBQUNHLElBQVAsR0FBZUgsS0FBSyxDQUFDRyxJQUFyQixHQUE0QixFQUF2QztBQUNBLFFBQUlJLEdBQUcsR0FBSUMsUUFBUSxDQUFDQyxhQUFULENBQXVCLE1BQXZCLENBQVg7O0FBRUEsUUFBSSxPQUFPSCxNQUFQLElBQWlCLFVBQXJCLEVBQWlDO0FBQ2hDQyxTQUFHLENBQUNHLE1BQUosR0FBYUosTUFBYjtBQUNBOztBQUNEQyxPQUFHLENBQUNRLEdBQUosR0FBVSxZQUFWO0FBQ0FSLE9BQUcsQ0FBQ1MsS0FBSixHQUFZLEtBQVo7QUFDQVQsT0FBRyxDQUFDVSxJQUFKLEdBQVdkLElBQUksR0FBR0UsR0FBbEI7QUFDQUcsWUFBUSxDQUFDSSxJQUFULENBQWNDLFdBQWQsQ0FBMEJOLEdBQTFCO0FBQ0EsR0FaRDtBQWNBOzs7Ozs7OztBQU1BTixTQUFPLENBQUNpQixnQkFBUixHQUEyQixVQUFVQyxFQUFWLEVBQWM7QUFFeEMsUUFBSUwsVUFBVSxHQUFHTixRQUFRLENBQUNZLGNBQVQsQ0FBd0JELEVBQXhCLENBQWpCO0FBRUFFLFdBQU8sQ0FBQ0MsR0FBUixDQUFZUixVQUFaOztBQUVBLFFBQUlBLFVBQUosRUFBZ0I7QUFDZkEsZ0JBQVUsQ0FBQ1MsUUFBWCxHQUFzQixJQUF0QjtBQUNBO0FBQ0QsR0FURCxDQTlENkIsQ0F5RTdCOzs7QUFDRyxTQUFPO0FBQ0hyQixXQUFPLEVBQUVELE9BQU8sQ0FBQ0MsT0FEZDtBQUVIRSxVQUFNLEVBQUVILE9BQU8sQ0FBQ0csTUFGYjtBQUdIVSxjQUFVLEVBQUViLE9BQU8sQ0FBQ2EsVUFIakI7QUFJSEksb0JBQWdCLEVBQUVqQixPQUFPLENBQUNpQjtBQUp2QixHQUFQO0FBTUgsQ0FoRmlCLEVBQWxCOztBQWtGZW5CLDBFQUFmIiwiZmlsZSI6Ii4vc3JjL2pzL2R5bmFtaWMtbG9hZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRHluYW1pYyBMb2FkIFN0eWxlc2hlZXQgb3IgU2NyaXB0XG4gKlxuICogVG8gZHluYW1pY2FsbHkgbG9hZCBhIHN0eWxlc2hlZXQgb3Igc2NyaXB0Li4uXG4gKlxuICogTm90ZTogSSB0aGluayB0aGUgc2NyaXB0cyBhbmQgc3R5bGVzIHNob3VsZCBiZSBsb2FkZWQgb24gbG9hZC5cbiAqL1xuXG52YXIgZHluYW1pY0xvYWQgPSAoZnVuY3Rpb24oKSB7XG5cbiAgICB2YXIgcHJvcHMgICA9IHt9OyAvLyBTdG9yZSBwcm9wZXJ0aWVzXG4gICAgdmFyIG1ldGhvZHMgPSB7fTsgLy8gU3RvcmUgbWV0aG9kcyAoZnVuY3Rpb25zKVxuXG4gICAgLyoqXG5cdCAqIFNldCBwYXRoIHRvIHNjcmlwdHMgYW5kIHN0eWxlc2hlZXRzXG5cdCAqXG5cdCAqIEBwYXJhbSBwYXRoICBzdHJpbmcgcmVsYXRpdmUgdXJsIHBhdGhcblx0ICovXG4gICAgbWV0aG9kcy5zZXRQYXRoID0gZnVuY3Rpb24gKHBhdGgpIHtcbiAgICBcdHByb3BzLnBhdGggPSBwYXRoO1xuXG4gICAgXHQvLyBUcmFpbGluZ3NsYXNoLi5cbiAgICBcdC8vIGlmICh1cmwuc3Vic3RyKC0xKSAhPSAnLycpIHVybCArPSAnLyc7XG4gICAgfVxuXG5cbiAgICAvKipcblx0ICogTG9hZCB0aGUgc3BlY2lmaWVkIFNjcmlwdFxuXHQgKlxuXHQgKiBAcGFyYW0gdXJsICBcdCAgdGFyZ2V0IFNjcmlwdCB0byBsb2FkXG5cdCAqIEBwYXJhbSBsb2FkZWQgIGZ1bmN0aW9uIHRvIGNhbGwgb24gc2NyaXB0IGxvYWRlZFxuXHQgKi9cbiAgICBtZXRob2RzLnNjcmlwdCA9IGZ1bmN0aW9uICh1cmwsIGxvYWRlZCkge1xuXG5cdFx0dmFyIHBhdGggPSAocHJvcHMucGF0aCkgPyBwcm9wcy5wYXRoIDogJyc7XG5cdFx0dmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG5cblx0XHRpZiAodHlwZW9mIGxvYWRlZCA9PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdHRhZy5vbmxvYWQgPSBsb2FkZWQ7XG5cdFx0fVxuXHRcdHRhZy5zcmMgPSBwYXRoICsgdXJsO1xuXHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQodGFnKTtcblx0fTtcblxuXHQvKipcblx0ICogTG9hZCB0aGUgc3BlY2lmaWVkIFN0eWxlc2hlZXRcblx0ICpcblx0ICogQHBhcmFtIHVybCAgXHQgIHRhcmdldCBTdHlsZXNoZWV0IHRvIGxvYWRcblx0ICogQHBhcmFtIGxvYWRlZCAgZnVuY3Rpb24gdG8gY2FsbCBvbiBzY3JpcHQgbG9hZGVkXG5cdCAqL1xuXHRtZXRob2RzLnN0eWxlc2hlZXQgPSBmdW5jdGlvbiAodXJsLCBsb2FkZWQpIHtcblxuXHRcdHZhciBwYXRoID0gKHByb3BzLnBhdGgpID8gcHJvcHMucGF0aCA6ICcnO1xuXHRcdHZhciB0YWcgID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0XHRpZiAodHlwZW9mIGxvYWRlZCA9PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdHRhZy5vbmxvYWQgPSBsb2FkZWQ7XG5cdFx0fVxuXHRcdHRhZy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblx0XHR0YWcubWVkaWEgPSBcImFsbFwiO1xuXHRcdHRhZy5ocmVmID0gcGF0aCArIHVybDtcblx0XHRkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHRhZyk7XG5cdH07XG5cblx0LyoqXG5cdCAqIExvYWQgdGhlIHNwZWNpZmllZCBTdHlsZXNoZWV0XG5cdCAqXG5cdCAqIEBwYXJhbSB1cmwgIFx0ICB0YXJnZXQgU3R5bGVzaGVldCB0byBsb2FkXG5cdCAqIEBwYXJhbSBsb2FkZWQgIGZ1bmN0aW9uIHRvIGNhbGwgb24gc2NyaXB0IGxvYWRlZFxuXHQgKi9cblx0bWV0aG9kcy51bmxvYWRTdHlsZXNoZWV0ID0gZnVuY3Rpb24gKGlkKSB7XG5cblx0XHR2YXIgc3R5bGVzaGVldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcblxuXHRcdGNvbnNvbGUubG9nKHN0eWxlc2hlZXQpO1xuXG5cdFx0aWYgKHN0eWxlc2hlZXQpIHtcblx0XHRcdHN0eWxlc2hlZXQuZGlzYWJsZWQgPSB0cnVlO1xuXHRcdH1cblx0fTtcblxuXHQvLyBSZXR1cm5cbiAgICByZXR1cm4ge1xuICAgICAgICBzZXRQYXRoOiBtZXRob2RzLnNldFBhdGgsXG4gICAgICAgIHNjcmlwdDogbWV0aG9kcy5zY3JpcHQsXG4gICAgICAgIHN0eWxlc2hlZXQ6IG1ldGhvZHMuc3R5bGVzaGVldCxcbiAgICAgICAgdW5sb2FkU3R5bGVzaGVldDogbWV0aG9kcy51bmxvYWRTdHlsZXNoZWV0XG4gICAgfTtcbn0pKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGR5bmFtaWNMb2FkO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/dynamic-load.js\n");

/***/ }),

/***/ "./src/js/site-nav-toggle.js":
/*!***********************************!*\
  !*** ./src/js/site-nav-toggle.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * Site Navigation Toggle\n *\n * A flexible and accessible toggle for site navigation\n */\nvar siteNavToggle = function () {\n  var props = {}; // Store properties\n\n  var methods = {}; // Store methods (functions)\n\n  var elems = {}; // Store elements\n\n  var events = {}; // Store events\n\n  var helpers = {}; // Store private helper methods\n\n  /* ENGINE\n  -------------------------------------*/\n  // Initialize\n\n  methods.init = function (customOptions) {\n    // Setup toggle and target\n    methods.setup(customOptions); // We only need to control if we have a toggle and a target\n\n    if (elems.toggle && elems.target) {\n      // Make sure toggle and target are in the right state\n      methods.reset(); // Manage control of toggle and target\n\n      methods.control();\n    }\n  }; // Setup\n\n\n  methods.setup = function (customOptions) {\n    // Set default options\n    props.options = {\n      rootSelector: 'body',\n      toggleSelector: '.site-nav-toggle',\n      targetSelector: '.site-nav',\n      activeRootClass: 'has-expanded-site-nav'\n    }; // Merge options\n\n    props.options = helpers.extend(true, props.options, customOptions); // Get root\n\n    elems.root = document.querySelector(props.options.rootSelector); // Get toggle\n\n    elems.toggle = document.querySelector(props.options.toggleSelector); // Get navigation based on toggle-target\n\n    elems.target = document.querySelector(props.options.targetSelector);\n\n    if (elems.target) {\n      // Focusable elements inside the target\n      elems.targetFocusable = elems.target.querySelectorAll(['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])']);\n    }\n  }; // Control\n\n\n  methods.control = function () {\n    // Manage opening and closing of target\n    events.onClickToggle(methods.toggle); // // Extra closing methods\n\n    events.onPressEscape(methods.close);\n    events.onClickOutsideTarget(methods.close);\n  };\n  /**\n   * Make sure toggle and target are in the right state\n   */\n\n\n  methods.reset = function () {\n    elems.toggle.setAttribute('aria-expanded', 'false');\n    elems.target.setAttribute('aria-expanded', 'false');\n    elems.root.classList.remove(props.options.activeRootClass); // Force toggle to be focusable\n    // elems.toggle.tabIndex = 0;\n    // Prevent target from getting focus\n\n    methods.preventFocusInTarget();\n  };\n  /* FUNCTIONS\n  -------------------------------------*/\n\n  /**\n   * Toggle menu classes and ARIA.\n   */\n\n\n  methods.toggle = function (toggle) {\n    if (methods.isOpen()) {\n      methods.close();\n    } else {\n      methods.open(toggle);\n    }\n  };\n  /**\n   * Open target\n   */\n\n\n  methods.open = function (toggle) {\n    // Don't open if target is not closed\n    if (!methods.isClose()) {\n      return;\n    }\n\n    elems.toggle.setAttribute('aria-expanded', 'true');\n    elems.target.setAttribute('aria-expanded', 'true');\n    elems.root.classList.add(props.options.activeRootClass); // Get lastFocus element\n\n    elems.lastFocus = toggle; // Trap focus in target\n\n    methods.allowFocusInTarget();\n    methods.trapFocusInTarget();\n  };\n  /**\n   * Close target\n   */\n\n\n  methods.close = function () {\n    // Don't close if target is not open\n    if (!methods.isOpen()) {\n      return;\n    }\n\n    elems.toggle.setAttribute('aria-expanded', 'false');\n    elems.target.setAttribute('aria-expanded', 'false');\n    elems.root.classList.remove(props.options.activeRootClass); // Return focus to lastFocussed element\n\n    if (elems.lastFocus) {\n      elems.lastFocus.focus();\n    } // Prevent target from getting focus\n\n\n    methods.preventFocusInTarget();\n  };\n  /**\n   * Check if target is open (expanded)\n   */\n\n\n  methods.isOpen = function () {\n    return elems.target.getAttribute('aria-expanded') == 'true';\n  };\n  /**\n   * Check if target is closed (not expanded)\n   */\n\n\n  methods.isClose = function () {\n    return !methods.isOpen();\n  }; // Trap focus in target\n\n\n  methods.trapFocusInTarget = function () {\n    // Get first and last focusable element to define the edges of the tab-scope\n    var firstFocusableElem = elems.targetFocusable[0];\n    var lastFocusableElem = elems.targetFocusable[elems.targetFocusable.length - 1]; // On Tab of the toggle\n\n    elems.toggle.addEventListener('keydown', function (e) {\n      if (methods.isOpen()) {\n        // Redirect Shift+Tab to lastFocusableElem\n        if (9 === e.keyCode && e.shiftKey) {\n          e.preventDefault();\n          lastFocusableElem.focus(); // Set focus on first element.\n        } // Redirect Tab to firstFocusableElem\n\n\n        if (9 === e.keyCode && !e.shiftKey) {\n          e.preventDefault();\n          firstFocusableElem.focus();\n        }\n      }\n    }); // On Tab of the first target focusable elem\n\n    firstFocusableElem.addEventListener('keydown', function (e) {\n      if (methods.isOpen()) {\n        // Redirect first Shift+Tab to toggle\n        if (9 === e.keyCode && e.shiftKey) {\n          e.preventDefault();\n          elems.toggle.focus(); // Set focus on first element.\n        }\n      }\n    }); // On Tab of the last target focusable elem\n\n    lastFocusableElem.addEventListener('keydown', function (e) {\n      if (methods.isOpen()) {\n        // Redirect last Tab to toggle\n        if (9 === e.keyCode && !e.shiftKey) {\n          e.preventDefault();\n          elems.toggle.focus();\n        }\n      }\n    });\n  }; // Allow focus in target\n\n\n  methods.allowFocusInTarget = function () {\n    // Remove negative tabindexes set by methods.preventFocusInTarget()\n    for (var i = 0; i < elems.targetFocusable.length; i++) {\n      elems.targetFocusable[i].removeAttribute('tabindex');\n    }\n  }; // Prevent focus in target\n\n\n  methods.preventFocusInTarget = function () {\n    // Set tabindex to -1 to prevent tabbing\n    for (var i = 0; i < elems.targetFocusable.length; i++) {\n      elems.targetFocusable[i].tabIndex = -1;\n    }\n  };\n  /* EVENTS\n  -------------------------------------*/\n  // On click target toggle\n\n\n  events.onClickToggle = function (callback) {\n    // Exit if callback is not a function\n    if (typeof callback !== \"function\") return; // Click on toggle\n\n    document.addEventListener('click', function (event) {\n      // Check if toggle\n      if (elems.toggle.contains(event.target)) {\n        event.preventDefault();\n        callback(event.target);\n      }\n    }, false);\n  }; // On press Escape Key\n\n\n  events.onPressEscape = function (callback) {\n    // Check if callback is function\n    if (typeof callback !== \"function\") return;\n    document.addEventListener('keyup', function (event) {\n      // 27 = Escape key\n      if (27 === event.keyCode) {\n        callback();\n      }\n    }, false);\n  }; // Click outside target\n\n\n  events.onClickOutsideTarget = function (callback) {\n    // Check if callback is function\n    if (typeof callback !== \"function\") return; // Listen to click outside target\n\n    document.addEventListener('click', function (event) {\n      // Only check if navigation is opened\n      if (methods.isOpen()) {\n        // Only proceed if click is outside target. Toggle is not outside target\n        if (!elems.target.contains(event.target) && !elems.toggle.contains(event.target)) {\n          callback();\n        }\n      }\n    }, false);\n  };\n  /* HELPERS\n  -------------------------------------*/\n  // Pass in the objects to merge as arguments.\n  // For a deep extend, set the first argument to `true`.\n\n\n  helpers.extend = function () {\n    // Variables\n    var extended = {};\n    var deep = false;\n    var i = 0;\n    var length = arguments.length; // Check if a deep merge\n\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\n      deep = arguments[0];\n      i++;\n    } // Merge the object into the extended object\n\n\n    var merge = function merge(obj) {\n      for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n          // If deep merge and property is an object, merge properties\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n            extended[prop] = helpers.extend(true, extended[prop], obj[prop]);\n          } else {\n            extended[prop] = obj[prop];\n          }\n        }\n      }\n    }; // Loop through each object and conduct a merge\n\n\n    for (; i < length; i++) {\n      var obj = arguments[i];\n      merge(obj);\n    }\n\n    return extended;\n  }; // Return\n\n\n  return {\n    init: methods.init,\n    props: props,\n    elems: elems\n  };\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (siteNavToggle);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/site-nav-toggle.js\n");

/***/ }),

/***/ "./src/js/theme.js":
/*!*************************!*\
  !*** ./src/js/theme.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _site_nav_toggle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./site-nav-toggle.js */ \"./src/js/site-nav-toggle.js\");\n/* harmony import */ var _dynamic_load_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dynamic-load.js */ \"./src/js/dynamic-load.js\");\n/**\n * Primary front-end script.\n */\n\n\n_site_nav_toggle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].init({\n  toggleSelector: '.site-nav-toggle',\n  targetSelector: '.site-nav'\n}); // Check whether this is IE and add IE11 stylesheet\n\nif (window.document.documentMode) {\n  _dynamic_load_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stylesheet(\"/wp-content/themes/theme-wbl/public/css/ie11-style.css?ver=\" + theme.version);\n  _dynamic_load_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].unloadStylesheet(\"theme-wbl-css\");\n}\n/**\n * Grid toggle\n */\n\n\nvar gridToggle = document.querySelector('#grid-toggle');\nvar gridToggleTarget = document.querySelector('body');\n\nif (localStorage.getItem('hasGrid')) {\n  gridToggleTarget.classList.add('has-grid');\n  gridToggle.checked = true;\n} else {\n  gridToggle.textContent = false;\n}\n\ngridToggle.addEventListener('click', function (e) {\n  // e.preventDefault();\n  if (localStorage.getItem('hasGrid')) {\n    gridToggleTarget.classList.remove('has-grid');\n    gridToggle.checked = false;\n    localStorage.removeItem('hasGrid');\n  } else {\n    gridToggleTarget.classList.add('has-grid');\n    gridToggle.checked = true;\n    localStorage.setItem('hasGrid', true);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvdGhlbWUuanM/OTNkMyJdLCJuYW1lcyI6WyJzaXRlTmF2VG9nZ2xlIiwiaW5pdCIsInRvZ2dsZVNlbGVjdG9yIiwidGFyZ2V0U2VsZWN0b3IiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImRvY3VtZW50TW9kZSIsImR5bmFtaWNMb2FkIiwic3R5bGVzaGVldCIsInRoZW1lIiwidmVyc2lvbiIsInVubG9hZFN0eWxlc2hlZXQiLCJncmlkVG9nZ2xlIiwicXVlcnlTZWxlY3RvciIsImdyaWRUb2dnbGVUYXJnZXQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiY2xhc3NMaXN0IiwiYWRkIiwiY2hlY2tlZCIsInRleHRDb250ZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJyZW1vdmUiLCJyZW1vdmVJdGVtIiwic2V0SXRlbSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7OztBQUlBO0FBQ0E7QUFFQUEsMkRBQWEsQ0FBQ0MsSUFBZCxDQUFtQjtBQUNsQkMsZ0JBQWMsRUFBRyxrQkFEQztBQUVmQyxnQkFBYyxFQUFHO0FBRkYsQ0FBbkIsRSxDQUtBOztBQUNBLElBQUlDLE1BQU0sQ0FBQ0MsUUFBUCxDQUFnQkMsWUFBcEIsRUFBa0M7QUFDakNDLDBEQUFXLENBQUNDLFVBQVosQ0FBdUIsZ0VBQThEQyxLQUFLLENBQUNDLE9BQTNGO0FBQ0FILDBEQUFXLENBQUNJLGdCQUFaLENBQTZCLGVBQTdCO0FBQ0E7QUFJRDs7Ozs7QUFHQSxJQUFJQyxVQUFVLEdBQUdQLFFBQVEsQ0FBQ1EsYUFBVCxDQUF1QixjQUF2QixDQUFqQjtBQUNBLElBQUlDLGdCQUFnQixHQUFHVCxRQUFRLENBQUNRLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBdkI7O0FBRUEsSUFBSUUsWUFBWSxDQUFDQyxPQUFiLENBQXFCLFNBQXJCLENBQUosRUFBcUM7QUFDcENGLGtCQUFnQixDQUFDRyxTQUFqQixDQUEyQkMsR0FBM0IsQ0FBK0IsVUFBL0I7QUFDQU4sWUFBVSxDQUFDTyxPQUFYLEdBQXFCLElBQXJCO0FBQ0EsQ0FIRCxNQUlLO0FBQ0pQLFlBQVUsQ0FBQ1EsV0FBWCxHQUF5QixLQUF6QjtBQUNBOztBQUVEUixVQUFVLENBQUNTLGdCQUFYLENBQTRCLE9BQTVCLEVBQXFDLFVBQVNDLENBQVQsRUFBWTtBQUM3QztBQUNBLE1BQUlQLFlBQVksQ0FBQ0MsT0FBYixDQUFxQixTQUFyQixDQUFKLEVBQXFDO0FBQ2pDRixvQkFBZ0IsQ0FBQ0csU0FBakIsQ0FBMkJNLE1BQTNCLENBQWtDLFVBQWxDO0FBQ0FYLGNBQVUsQ0FBQ08sT0FBWCxHQUFxQixLQUFyQjtBQUNBSixnQkFBWSxDQUFDUyxVQUFiLENBQXdCLFNBQXhCO0FBQ0gsR0FKRCxNQUlPO0FBQ0hWLG9CQUFnQixDQUFDRyxTQUFqQixDQUEyQkMsR0FBM0IsQ0FBK0IsVUFBL0I7QUFDQU4sY0FBVSxDQUFDTyxPQUFYLEdBQXFCLElBQXJCO0FBQ0FKLGdCQUFZLENBQUNVLE9BQWIsQ0FBcUIsU0FBckIsRUFBZ0MsSUFBaEM7QUFDSDtBQUNKLENBWEQiLCJmaWxlIjoiLi9zcmMvanMvdGhlbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFByaW1hcnkgZnJvbnQtZW5kIHNjcmlwdC5cbiAqL1xuXG5pbXBvcnQgc2l0ZU5hdlRvZ2dsZSBmcm9tICcuL3NpdGUtbmF2LXRvZ2dsZS5qcyc7XG5pbXBvcnQgZHluYW1pY0xvYWQgZnJvbSAnLi9keW5hbWljLWxvYWQuanMnO1xuXG5zaXRlTmF2VG9nZ2xlLmluaXQoe1xuXHR0b2dnbGVTZWxlY3RvciA6ICcuc2l0ZS1uYXYtdG9nZ2xlJyxcbiAgICB0YXJnZXRTZWxlY3RvciA6ICcuc2l0ZS1uYXYnXG59KTtcblxuLy8gQ2hlY2sgd2hldGhlciB0aGlzIGlzIElFIGFuZCBhZGQgSUUxMSBzdHlsZXNoZWV0XG5pZiAod2luZG93LmRvY3VtZW50LmRvY3VtZW50TW9kZSkge1xuXHRkeW5hbWljTG9hZC5zdHlsZXNoZWV0KFwiL3dwLWNvbnRlbnQvdGhlbWVzL3RoZW1lLXdibC9wdWJsaWMvY3NzL2llMTEtc3R5bGUuY3NzP3Zlcj1cIit0aGVtZS52ZXJzaW9uKTtcblx0ZHluYW1pY0xvYWQudW5sb2FkU3R5bGVzaGVldChcInRoZW1lLXdibC1jc3NcIik7XG59XG5cblxuXG4vKipcbiAqIEdyaWQgdG9nZ2xlXG4gKi9cbmxldCBncmlkVG9nZ2xlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2dyaWQtdG9nZ2xlJyk7XG5sZXQgZ3JpZFRvZ2dsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcblxuaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdoYXNHcmlkJykpIHtcblx0Z3JpZFRvZ2dsZVRhcmdldC5jbGFzc0xpc3QuYWRkKCdoYXMtZ3JpZCcpO1xuXHRncmlkVG9nZ2xlLmNoZWNrZWQgPSB0cnVlO1xufVxuZWxzZSB7XG5cdGdyaWRUb2dnbGUudGV4dENvbnRlbnQgPSBmYWxzZTtcbn1cblxuZ3JpZFRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAvLyBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdoYXNHcmlkJykpIHtcbiAgICAgICAgZ3JpZFRvZ2dsZVRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdoYXMtZ3JpZCcpO1xuICAgICAgICBncmlkVG9nZ2xlLmNoZWNrZWQgPSBmYWxzZTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ2hhc0dyaWQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBncmlkVG9nZ2xlVGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2hhcy1ncmlkJyk7XG4gICAgICAgIGdyaWRUb2dnbGUuY2hlY2tlZCA9IHRydWU7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdoYXNHcmlkJywgdHJ1ZSk7XG4gICAgfVxufSk7ICJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/theme.js\n");

/***/ }),

/***/ 1:
/*!*******************************!*\
  !*** multi ./src/js/theme.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/erik/Webdev/www/hetweblokaal/public_html/wp-content/themes/theme-wbl/src/js/theme.js */"./src/js/theme.js");


/***/ })

/******/ });